package com.swinestudios.onescreen;

import java.util.Random;

import org.mini2Dx.core.game.GameContainer;
import org.mini2Dx.core.graphics.Graphics;
import org.mini2Dx.core.screen.GameScreen;
import org.mini2Dx.core.screen.ScreenManager;
import org.mini2Dx.core.screen.Transition;
import org.mini2Dx.core.screen.transition.FadeInTransition;
import org.mini2Dx.core.screen.transition.FadeOutTransition;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input.Keys;
import com.badlogic.gdx.audio.Sound;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Sprite;

public class MainMenu implements GameScreen{
	
	public static int ID = 1;
	public static Sound titleTheme;
	public static final String FONT_CHARACTERS = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789][_!$%#@|\\/?-+=()*&.;:,{}\"´`'<>";
	
	private Star[] stars;
	public Random random;
	private Sprite titleBackground;

	@Override
	public int getId(){
		return ID;
	}

	@Override
	public void initialise(GameContainer gc){
		random = new Random();
		stars = new Star[100];
		titleTheme = Gdx.audio.newSound(Gdx.files.internal("title.ogg"));
		titleBackground = new Sprite(new Texture(Gdx.files.internal("titleBackground.png")));
		titleBackground.flip(false, true);
		titleBackground.setOrigin(0, 0);
		
		for(int i = 0; i < stars.length; i++){
			stars[i] = new Star(random.nextInt(gc.getWidth()), random.nextInt(gc.getHeight()), true);
		}
	}

	@Override
	public void postTransitionIn(Transition t){
		titleTheme.loop();
	}

	@Override
	public void postTransitionOut(Transition t){
		
	}

	@Override
	public void preTransitionIn(Transition t){
		
	}

	@Override
	public void preTransitionOut(Transition t){
		
	}

	@Override
	public void render(GameContainer gc, Graphics g){
		for(int i = 0; i < stars.length; i++){ //render all the stars
			stars[i].render(g);
		}
		g.drawSprite(titleBackground, 0, 0);
	}

	@Override
	public void update(GameContainer gc, ScreenManager<? extends GameScreen> sm, float delta){
		for(int i = 0; i < stars.length; i++){ //update all the stars
			stars[i].update(delta);
		}
		
		if(Gdx.input.isKeyPressed(Keys.SPACE)){
			sm.enterGameScreen(Arena.ID, new FadeOutTransition(), new FadeInTransition());
		}
		if(Gdx.input.isKeyPressed(Keys.ESCAPE)){
			Gdx.app.exit();
		}
	}
	
	@Override
	public void interpolate(GameContainer gc, float delta){
	}

}
